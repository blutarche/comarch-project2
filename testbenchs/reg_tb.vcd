$date
	Sat May  9 22:03:08 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module reg_tb $end
$var wire 32 ! o2 [31:0] $end
$var wire 32 " o1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ i1 [4:0] $end
$var reg 5 % i2 [4:0] $end
$var reg 1 & w $end
$var reg 5 ' wa [4:0] $end
$var reg 32 ( wd [31:0] $end
$scope module regtest $end
$var wire 1 # clk $end
$var wire 5 ) read_addr1 [4:0] $end
$var wire 5 * read_addr2 [4:0] $end
$var wire 32 + read_data1 [31:0] $end
$var wire 32 , read_data2 [31:0] $end
$var wire 1 & write $end
$var wire 5 - write_addr [4:0] $end
$var wire 32 . write_data [31:0] $end
$var reg 6 / k [5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100000 /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
bx %
bx $
0#
bx "
bx !
$end
#1
1#
b10011010010 (
b10011010010 .
b1111 '
b1111 -
1&
#2
0#
#3
1#
b0 (
b0 .
b0 '
b0 -
0&
b10011010010 "
b10011010010 +
b1111 $
b1111 )
#4
0#
#5
1#
b1101110111001101 (
b1101110111001101 .
b11110 '
b11110 -
1&
#6
0#
#7
1#
b0 (
b0 .
b0 '
b0 -
0&
b10011010010 !
b10011010010 ,
b1111 %
b1111 *
b1101110111001101 "
b1101110111001101 +
b11110 $
b11110 )
#8
0#
#9
1#
